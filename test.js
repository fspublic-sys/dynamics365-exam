const text = [
`会社はDynamics365Financeを実装しています。 

実装チームは、一般的なビジネスユースケースを新しいシステムで実行できるようにするために、受け入れスクリプトを作成する必要があります。機能階層別に編成された必要なタスクをステップスルーして、ユースケースをテストする必要があります。 

ライフサイクルサービス（LCS）で、簡単に繰り返すことができるユーザー受け入れテスト（UAT）テストを作成する必要があります。 

 

何を使うべきですか？`,
`企業は、特定の住所を検索し、システムに含まれている可能性のあるベンダー、顧客、および従業員に関する個人を特定できるすべての情報を削除できる必要があります。 

これをすばやく達成するには、ツールを特定する必要があります。 

 

どのツールを使用する必要がありますか？`,
`DRAG DROP- 

企業は、デフォルトのインストールからビジネスユニットのデータ分析を必要としています。 

システムオブジェクトがデータ分析要件を満たす適切な機能モジュール領域を選択する必要があります。 

 

どの基本レポートタイプオブジェクトを使用する必要がありますか？ 

 

回答するには、適切なレポートタイプを正しい要件にドラッグします。活用する各レポートタイプは、1回使用することも、複数回使用することも、まったく使用しないこともできます。コンテンツを表示するには、分割バーをペイン間でドラッグするか、スクロールする必要がある場合があります。 

注：正しい選択はそれぞれ1ポイントの価値があります。`,
`ある会社がDynamics365Financeを使用しています。 

ビジネスプロセスとそれに関連する要件を確認します。これらの作業項目には、バグ、タスク、バックログ項目、テスト、およびドキュメントが含まれます。 

次のタスクを実行する必要があります。 

✑実装プロジェクトの進捗状況を追跡し、さまざまな作業項目を要件およびビジネスプロセスに関連付けます。 

✑通常の配信スケジュール内でバグ修正を特定して公開します。 

 

どのツールを使用する必要がありますか？`,
`ある会社がDynamics365Financeを実装しています。同社は、いくつかの標準的なビジネス慣行とプロセスをシステムに自動化したいと考えています。 

営業担当者が新規顧客を呼び、注文を取得します。プロセスの一環として、担当者は、顧客のクレジットアプリケーションをOneDrive社にアップロードして処理し、新しい顧客レコードを作成し、デフォルトの最小クレジット制限を設定して、新しい顧客をオンボーディングするための標準的な手順に従う必要があります。会社の合理化された新規顧客フォームを使用した新規注文。 

クレジット申請が財務マネージャーによって承認され、顧客のクレジット制限がシステムで更新された後、注文は履行のためにリリースされます。 

シナリオに最適なツールまたは機能を決定する必要があります。 

 

どの機能を使用する必要がありますか？ `,
`ある会社は、事業部門ごとにグローバル名簿と追加の名簿を作成することを計画しています。 

あなたは名簿にパーティーを追加するのを手伝う必要があります。 

 

グローバル名簿と追加の名簿の両方に使用できる2つのパーティタイプはどれですか。 

 

それぞれの正解は完全な解決策を提示します。 

注：正しい選択はそれぞれ1ポイントの価値があります。`,
`HOTSPOT- 

モバイルアプリを使用して新しいプロセスを実装する必要があります。 

 

要件ごとにどのモバイルアプリを使用する必要がありますか？ 

 

回答するには、回答領域で適切な構成を選択します。 

注：正しい選択はそれぞれ1ポイントの価値があります。`,
`会社はDynamics365Financeを使用しています。 

アウトバウンドドキュメントは、送信先の地域の法的要件を満たしていません。 

コンプライアンスのニーズに対応するために、送信ドキュメントを構成する必要があります。 

 

どの順序でアクションを実行する必要がありますか？ 

 

回答するには、すべてのアクションをアクションのリストから回答領域に移動し、正しい順序で配置します。 `,
`会社はDynamics365Financeを使用しています。 

あなたの会社は、個人、会社、および法人をリストしたワークブックを提供します。このワークブックには、各個人、会社、および法人に関する説明も含まれています。 

グローバルアドレスブックのパーティロールを設定する必要があります。 

 

どのパーティの役割を使用する必要がありますか？ `,

]
for(let i = 0; i < text.length; i++) {
    console.log('-------------------------------')
    console.log(text[i].replace(/\n/g, '\\n').replace(/(\\n).+?/g, '\\'))
}